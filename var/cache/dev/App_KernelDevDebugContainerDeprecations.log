a:14:{i:0;a:6:{s:4:"type";i:8192;s:7:"message";s:53:"Function libxml_disable_entity_loader() is deprecated";s:4:"file";s:64:"/var/guestbook/guestbook/vendor/symfony/config/Util/XmlUtils.php";s:4:"line";i:54;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:64:"/var/guestbook/guestbook/vendor/symfony/config/Util/XmlUtils.php";s:4:"line";i:140;s:8:"function";s:5:"parse";s:5:"class";s:38:"Symfony\Component\Config\Util\XmlUtils";s:4:"type";s:2:"::";}}s:5:"count";i:92;}i:1;a:6:{s:4:"type";i:8192;s:7:"message";s:243:"Return type of Symfony\Component\Routing\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:67:"/var/guestbook/guestbook/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:54;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:67:"/var/guestbook/guestbook/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:26;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:67:"/var/guestbook/guestbook/vendor/symfony/routing/RouteCollection.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:73:"/var/guestbook/guestbook/vendor/symfony/routing/Loader/GlobFileLoader.php";s:4:"line";i:29;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:8192;s:7:"message";s:215:"Return type of Symfony\Component\Routing\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:67:"/var/guestbook/guestbook/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:64;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:67:"/var/guestbook/guestbook/vendor/symfony/routing/RouteCollection.php";s:4:"line";i:26;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:67:"/var/guestbook/guestbook/vendor/symfony/routing/RouteCollection.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:73:"/var/guestbook/guestbook/vendor/symfony/routing/Loader/GlobFileLoader.php";s:4:"line";i:29;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:8192;s:7:"message";s:53:"Function libxml_disable_entity_loader() is deprecated";s:4:"file";s:64:"/var/guestbook/guestbook/vendor/symfony/config/Util/XmlUtils.php";s:4:"line";i:54;s:5:"trace";a:2:{i:0;a:5:{s:4:"file";s:64:"/var/guestbook/guestbook/vendor/symfony/config/Util/XmlUtils.php";s:4:"line";i:140;s:8:"function";s:5:"parse";s:5:"class";s:38:"Symfony\Component\Config\Util\XmlUtils";s:4:"type";s:2:"::";}i:1;a:5:{s:4:"file";s:72:"/var/guestbook/guestbook/vendor/symfony/routing/Loader/XmlFileLoader.php";s:4:"line";i:264;s:8:"function";s:8:"loadFile";s:5:"class";s:38:"Symfony\Component\Config\Util\XmlUtils";s:4:"type";s:2:"::";}}s:5:"count";i:6;}i:4;a:6:{s:4:"type";i:8192;s:7:"message";s:233:"Return type of Symfony\Component\Finder\Finder::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:607;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:39;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:72:"/var/guestbook/guestbook/vendor/symfony/twig-bundle/TemplateIterator.php";s:4:"line";i:84;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:8192;s:7:"message";s:205:"Return type of Symfony\Component\Finder\Finder::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:676;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:39;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:72:"/var/guestbook/guestbook/vendor/symfony/twig-bundle/TemplateIterator.php";s:4:"line";i:84;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:8192;s:7:"message";s:238:"Return type of Symfony\Component\Finder\Iterator\FileTypeFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:82:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/FileTypeFilterIterator.php";s:4:"line";i:42;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:3:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:101;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:8192;s:7:"message";s:286:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::getChildren() should either be compatible with RecursiveDirectoryIterator::getChildren(): RecursiveDirectoryIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:86:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:85;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:3:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:730;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::rewind() should either be compatible with FilesystemIterator::rewind(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:86:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:113;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:3:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:730;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:8192;s:7:"message";s:281:"Return type of Symfony\Component\Finder\Iterator\RecursiveDirectoryIterator::current() should either be compatible with FilesystemIterator::current(): SplFileInfo|FilesystemIterator|string, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:86:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/RecursiveDirectoryIterator.php";s:4:"line";i:61;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:3:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:730;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:55;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:19;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:733;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:8192;s:7:"message";s:259:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::hasChildren() should either be compatible with RecursiveIterator::hasChildren(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:74;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:19;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:733;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:8192;s:7:"message";s:273:"Return type of Symfony\Component\Finder\Iterator\ExcludeDirectoryFilterIterator::getChildren() should either be compatible with RecursiveIterator::getChildren(): ?RecursiveIterator, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:79;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";s:4:"line";i:19;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:90:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/ExcludeDirectoryFilterIterator.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:733;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Finder\Iterator\PathFilterIterator::accept() should either be compatible with FilterIterator::accept(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:78:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/PathFilterIterator.php";s:4:"line";i:27;s:5:"trace";a:3:{i:0;a:5:{s:4:"file";s:78:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/PathFilterIterator.php";s:4:"line";i:20;s:8:"function";s:50:"Symfony\Component\HttpKernel\CacheWarmer\{closure}";s:5:"class";s:61:"Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate";s:4:"type";s:2:"->";}i:1;a:4:{s:4:"file";s:74:"/var/guestbook/guestbook/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:4:"args";a:1:{i:0;s:78:"/var/guestbook/guestbook/vendor/symfony/finder/Iterator/PathFilterIterator.php";}s:8:"function";s:7:"include";}i:2;a:5:{s:4:"file";s:57:"/var/guestbook/guestbook/vendor/symfony/finder/Finder.php";s:4:"line";i:767;s:8:"function";s:9:"loadClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}}